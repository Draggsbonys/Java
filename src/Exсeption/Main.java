package Exсeption;
import java.io.*;
/*
 * В Java исключения (Exceptions) представляют собой способ обработки ошибок в программе.
 * Исключения возникают, когда в программе происходит неожиданное событие, например, ошибка при работе с файлом или делении на ноль.
 * Вместо того чтобы просто завершить работу программы, Java позволяет обработать эти ошибки и принять решение о том, что делать в такой ситуации.
 *
 * В Java исключения классифицируются на три типа:
 *
 * Проверяемые исключения (Checked Exceptions): это исключения, которые необходимо обработать явно в коде программы.
 * К ним относятся, например, IOException и SQLException.
 *
 * Непроверяемые исключения (Unchecked Exceptions): это исключения, которые не обязательно обрабатывать явно,
 * Но их все же можно обработать. К ним относятся, например, NullPointerException и ArrayIndexOutOfBoundsException.
 *
 * Ошибки (Errors): это исключения, которые обычно возникают в критических ситуациях,
 * Например, когда закончилась память. Обычно их не обрабатывают явно в коде программы.
 */
public class Main {
    public static void main(String[] args) throws Exception {
        // Unchecked exceptions //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        int[] array = {1,2,3};
        System.out.println(array[5]);

        String s = null;
        System.out.println(s.length());

        // Checked exception //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        File file1 = new File("test11.txt");

        // Блок try используется для написания кода, который может привести ошибкам или неожиданным ситуациям.
        try{
            FileInputStream fileInputStream1 = new FileInputStream(file1);
        }

        // Блок catch используется для обработки исключений, которые могут быть выброшены в блоке try.
        catch(FileNotFoundException e) {
            System.out.println("Файл был удален " + e);
        }

        // Блок finally используется для написания кода, который должен быть выполнен независимо от того, было ли выброшено исключение в блоке try или нет.
        finally {
            System.out.println("This finally block");
        }

        /*
         * Конструкторы классов FileInputStream и FileOutputStream могут выбрасывать исключение FileNotFoundException
         * Если файл который был указан в конструкторе потока не будет найден
         *
         * Методы read и write классов FileInputStream и FileOutputStream могут выбрасывать исключение IOException
         * Если поток из/в который производилось чтение/запись был прерван
         */

        /*
         * Иерархия наследования Throwable классов:
         *                                  Object
         *                                    |
         *                                Throwable
         *                               /         \
         *                        Exception        Error
         *                      /          \
         *      RuntimeException       IOException
         */

    }
}
