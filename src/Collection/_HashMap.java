package Collection;
import java.util.HashMap;
import java.util.Map;

/*
    Map в Java - это интерфейс, который представляет ассоциативный массив, то есть структуру данных,
    позволяющую хранить пары ключ-значение, где каждый ключ связан с определенным значением.

    HashMap это класс, который реализует интерфейс Map и используется для хранения пар ключ-значение
    в виде хеш-таблицы. В HashMap ключи хешируются для быстрого доступа к соответствующим значениям.
    Этот класс не гарантирует порядок элементов при итерации по ключам или значениям.

    В основе HashMap лежит массив. Элементами данного массива являются структуры LinkedList.
    Данные структуры и заполняются элементами, которые мы добавляем в HashMap.

    Добавление элементов в HashMap происходит следующим образом:

    1. Вычисляется hashCode() ключа элемента.

    2. Вычисляется индекс в массиве, где элемент будет храниться, используя вычисленное значение hashCode() и размер массива.

    3. Если индекс массива уже занят другим элементом, то происходит проверка на равенство ключей,
    если ключи равны, то значение элемента обновляется, если ключи различны, то элемент добавляется в связанный список, который находится в этом индексе массива.

    При поиске элемента в HashMap, сначала вычисляется hashCode() и находится соответствующий индекс массива.
    Затем происходит поиск в цепочке связанных списков, чтобы найти элемент с нужным ключом.
*/
public class _HashMap {
    public static void main(String[] args) {
        Map<Integer, String> stringMap = new HashMap<>();
        // Метод put() добавляет элемент в коллекцию
        stringMap.put(1000, "Sergey");
        stringMap.put(1001, "Leonid");
        // Метод putIfAbsent() добавляет элемент в коллекцию, если такой элемент отсутствует в ней
        stringMap.putIfAbsent(1002, "Maria");
        // Метод get() позволяет получить элемент принимая в параметр ключ данного элемента
        stringMap.get(1000);
        // Метод remove() удаляет элемент из коллекции принимая в параметр ключ данного элемента
        stringMap.remove(1001);
        // Метод containsValue() возвращает true, если такой элемент присутствует в коллекции
        stringMap.containsValue("Maria");
        // Метод containsKey() возвращает true, если такой ключ присутствует в коллекции
        stringMap.containsKey(1002);
        // Метод keySet() возвращает множество всех ключей в коллекции
        stringMap.keySet();
        // Метод values() возвращает множество значений в коллекции
        stringMap.values();

    }
}
