package Algorithm;
/*
 * Сортировка пузырьком - метод сравнивает попарно элементы массива, таким образом что максимальный элемент перемещается на последнее место в массиве
 * Вторым проходом, следующий по величине элемент переместится на предпоследнее место
 * Таким образом, самый маленький элемент массива "всплывает" в начало массива
 */
public class BubbleSort {
    public static void main(String[] args) {
        int[] arrayInt = new int[] {10, 4, 2, 15, 29, 3, 7};
        bubbleSort(arrayInt);

    }

    /*
     * Данный алгоритм реализует сортировку пузырьком. Сложность алгоритма по времени составляет O(n^2),
     * Где n - количество элементов в массиве. Это связано с тем, что алгоритм выполняет n проходов по массиву,
     * И на каждом проходе выполняется n операций сравнения и обмена элементов в худшем случае.
     * Таким образом, время выполнения алгоритма увеличивается квадратично с ростом размера массива.
     *
     * Сложность алгоритма бинарного поиска по времени в худшем случае составляет O(log n), где n - это количество элементов в отсортированном массиве.
     * Это связано с тем, что на каждой итерации алгоритм уменьшает размер области поиска вдвое, проверяя средний элемент массива на равенство искомому значению.
     * В результате, количество итераций, необходимых для нахождения искомого элемента, растет медленнее, чем линейно, а зависит от логарифма от количества элементов в массиве.
     */

    private static void bubbleSort(int[] array){
        boolean isSorted = false;
        while(!isSorted) {
            isSorted = true;
            for (int i = 1; i < array.length; i++) {
                if (array[i] < array[i-1]) {
                    int temp = array[i];
                    array[i] = array[i-1];
                    array[i-1] = temp;
                    isSorted = false;
                }
            }
            printArray(array);
        }
    }

    private static void printArray(int[] array) {
        for (int i = 0; i < array.length; i++) {
            System.out.print("["  + array[i] + "]");
        }
        System.out.println();
    }
}
